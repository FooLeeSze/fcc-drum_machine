{"ast":null,"code":"import { extractAudioFiles } from '../utils/utils';\nconst folder1 = 'electro/';\nconst folder2 = 'vinyl/';\nconst audioLibrary1 = ['CYCdh_ElecK01-ClHat01.wav', 'CYCdh_ElecK01-Kick01.wav', 'CYCdh_ElecK01-Kick02.wav', 'CYCdh_ElecK01-OpHat02.wav', 'CYCdh_ElecK01-Snr01.wav', 'CYCdh_ElecK01-Snr02.wav', 'CYCdh_ElecK01-Tom01.wav', 'CYCdh_ElecK01-Tom02.wav', 'CYCdh_ElecK01-Tom03.wav'];\nconst audioLibrary2 = ['CYCdh_VinylK2-ClHat.wav', 'CYCdh_VinylK2-Kick02.wav', 'CYCdh_VinylK2-Kicki01.wav', 'CYCdh_VinylK2-OpHat01.wav', 'CYCdh_VinylK2-Ride01.wav', 'CYCdh_VinylK2-Snr01.wav', 'CYCdh_VinylK2-Snr02.wav', 'CYCdh_VinylK2-Tom01.wav', 'CYCdh_VinylK2-Tom02.wav'];\nconst iniFiles = extractAudioFiles(folder1, audioLibrary1);\n\nconst audioFilesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    libNum: 1,\n    audioFiles: iniFiles\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'BANKA':\n      return {\n        libNum: 1,\n        audioFiles: extractAudioFiles(folder1, audioLibrary1)\n      };\n\n    case 'BANKB':\n      return extractAudioFiles(folder2, audioLibrary2);\n\n    default:\n      return state;\n  }\n};\n\nexport default audioFilesReducer;","map":{"version":3,"names":["extractAudioFiles","folder1","folder2","audioLibrary1","audioLibrary2","iniFiles","audioFilesReducer","state","libNum","audioFiles","action","type"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/drum_machine/drum_machine/src/reducers/audioUrl.js"],"sourcesContent":["import { extractAudioFiles } from '../utils/utils';\r\n\r\nconst folder1 = 'electro/';\r\nconst folder2 = 'vinyl/';\r\n\r\nconst audioLibrary1 = [\r\n    'CYCdh_ElecK01-ClHat01.wav',\r\n    'CYCdh_ElecK01-Kick01.wav',\r\n    'CYCdh_ElecK01-Kick02.wav',\r\n    'CYCdh_ElecK01-OpHat02.wav',\r\n    'CYCdh_ElecK01-Snr01.wav',\r\n    'CYCdh_ElecK01-Snr02.wav',\r\n    'CYCdh_ElecK01-Tom01.wav',\r\n    'CYCdh_ElecK01-Tom02.wav',\r\n    'CYCdh_ElecK01-Tom03.wav'\r\n]\r\n\r\nconst audioLibrary2 = [\r\n    'CYCdh_VinylK2-ClHat.wav',\r\n    'CYCdh_VinylK2-Kick02.wav',\r\n    'CYCdh_VinylK2-Kicki01.wav',\r\n    'CYCdh_VinylK2-OpHat01.wav',\r\n    'CYCdh_VinylK2-Ride01.wav',\r\n    'CYCdh_VinylK2-Snr01.wav',\r\n    'CYCdh_VinylK2-Snr02.wav',\r\n    'CYCdh_VinylK2-Tom01.wav',\r\n    'CYCdh_VinylK2-Tom02.wav'\r\n]\r\n\r\nconst iniFiles = extractAudioFiles(folder1, audioLibrary1);\r\n\r\nconst audioFilesReducer = (state = {libNum: 1, audioFiles: iniFiles}, action) => {\r\n    \r\n    switch(action.type) {\r\n        case 'BANKA':\r\n            return {\r\n                libNum: 1,\r\n                audioFiles: extractAudioFiles(folder1, audioLibrary1)\r\n            }\r\n        case 'BANKB':\r\n            return extractAudioFiles(folder2, audioLibrary2)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default audioFilesReducer"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gBAAlC;AAEA,MAAMC,OAAO,GAAG,UAAhB;AACA,MAAMC,OAAO,GAAG,QAAhB;AAEA,MAAMC,aAAa,GAAG,CAClB,2BADkB,EAElB,0BAFkB,EAGlB,0BAHkB,EAIlB,2BAJkB,EAKlB,yBALkB,EAMlB,yBANkB,EAOlB,yBAPkB,EAQlB,yBARkB,EASlB,yBATkB,CAAtB;AAYA,MAAMC,aAAa,GAAG,CAClB,yBADkB,EAElB,0BAFkB,EAGlB,2BAHkB,EAIlB,2BAJkB,EAKlB,0BALkB,EAMlB,yBANkB,EAOlB,yBAPkB,EAQlB,yBARkB,EASlB,yBATkB,CAAtB;AAYA,MAAMC,QAAQ,GAAGL,iBAAiB,CAACC,OAAD,EAAUE,aAAV,CAAlC;;AAEA,MAAMG,iBAAiB,GAAG,YAAuD;EAAA,IAAtDC,KAAsD,uEAA9C;IAACC,MAAM,EAAE,CAAT;IAAYC,UAAU,EAAEJ;EAAxB,CAA8C;EAAA,IAAXK,MAAW;;EAE7E,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,OAAL;MACI,OAAO;QACHH,MAAM,EAAE,CADL;QAEHC,UAAU,EAAET,iBAAiB,CAACC,OAAD,EAAUE,aAAV;MAF1B,CAAP;;IAIJ,KAAK,OAAL;MACI,OAAOH,iBAAiB,CAACE,OAAD,EAAUE,aAAV,CAAxB;;IACJ;MACI,OAAOG,KAAP;EATR;AAWH,CAbD;;AAeA,eAAeD,iBAAf"},"metadata":{},"sourceType":"module"}