{"ast":null,"code":"import { extractAudioFiles } from '../utils/utils';\nconst folder1 = '../samples/electro/';\nconst folder2 = '../samples/vinyl/';\nconst audioLibrary1 = ['CYCdh_ElecK01-ClHat01.wav', 'CYCdh_ElecK01-Kick01.wav', 'CYCdh_ElecK01-Kick02.wav', 'CYCdh_ElecK01-OpHat02.wav', 'CYCdh_ElecK01-Snr01.wav', 'CYCdh_ElecK01-Snr02.wav', 'CYCdh_ElecK01-Tom01.wav', 'CYCdh_ElecK01-Tom02.wav', 'CYCdh_ElecK01-Tom03.wav'];\nconst audioLibrary2 = ['CYCdh_VinylK2-ClHat.wav', 'CYCdh_VinylK2-Kick02.wav', 'CYCdh_VinylK2-Kicki01.wav', 'CYCdh_VinylK2-OpHat01.wav', 'CYCdh_VinylK2-Ride01.wav', 'CYCdh_VinylK2-Snr01.wav', 'CYCdh_VinylK2-Snr02.wav', 'CYCdh_VinylK2-Tom01.wav', 'CYCdh_VinylK2-Tom02.wav'];\n\nconst audioUrlReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    folder: folder1,\n    library: audioLibrary1\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let audioFiles;\n\n  switch (action.type) {\n    case 'BANKA':\n      audioFiles = extractAudioFiles(folder1, audioLibrary1);\n      return {\n        audioFiles: audioFiles\n      };\n\n    case 'BANKB':\n      audioFiles = extractAudioFiles(folder2, audioLibrary2);\n      return {\n        audioFiles: audioFiles\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default audioUrlReducer;","map":{"version":3,"names":["extractAudioFiles","folder1","folder2","audioLibrary1","audioLibrary2","audioUrlReducer","state","folder","library","action","audioFiles","type"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/drum_machine/drum_machine/src/reducers/audioUrl.js"],"sourcesContent":["import { extractAudioFiles } from '../utils/utils';\r\n\r\nconst folder1 = '../samples/electro/';\r\nconst folder2 = '../samples/vinyl/';\r\n\r\nconst audioLibrary1 = [\r\n    'CYCdh_ElecK01-ClHat01.wav',\r\n    'CYCdh_ElecK01-Kick01.wav',\r\n    'CYCdh_ElecK01-Kick02.wav',\r\n    'CYCdh_ElecK01-OpHat02.wav',\r\n    'CYCdh_ElecK01-Snr01.wav',\r\n    'CYCdh_ElecK01-Snr02.wav',\r\n    'CYCdh_ElecK01-Tom01.wav',\r\n    'CYCdh_ElecK01-Tom02.wav',\r\n    'CYCdh_ElecK01-Tom03.wav'\r\n]\r\n\r\nconst audioLibrary2 = [\r\n    'CYCdh_VinylK2-ClHat.wav',\r\n    'CYCdh_VinylK2-Kick02.wav',\r\n    'CYCdh_VinylK2-Kicki01.wav',\r\n    'CYCdh_VinylK2-OpHat01.wav',\r\n    'CYCdh_VinylK2-Ride01.wav',\r\n    'CYCdh_VinylK2-Snr01.wav',\r\n    'CYCdh_VinylK2-Snr02.wav',\r\n    'CYCdh_VinylK2-Tom01.wav',\r\n    'CYCdh_VinylK2-Tom02.wav'\r\n]\r\n\r\nconst audioUrlReducer = (state = {folder: folder1, library: audioLibrary1}, action) => {\r\n    let audioFiles\r\n    switch(action.type) {\r\n        case 'BANKA':\r\n            audioFiles = extractAudioFiles(folder1, audioLibrary1);\r\n\r\n            return {\r\n                audioFiles: audioFiles\r\n            }\r\n        case 'BANKB':\r\n            audioFiles = extractAudioFiles(folder2, audioLibrary2);\r\n\r\n            return {\r\n                audioFiles: audioFiles\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default audioUrlReducer"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gBAAlC;AAEA,MAAMC,OAAO,GAAG,qBAAhB;AACA,MAAMC,OAAO,GAAG,mBAAhB;AAEA,MAAMC,aAAa,GAAG,CAClB,2BADkB,EAElB,0BAFkB,EAGlB,0BAHkB,EAIlB,2BAJkB,EAKlB,yBALkB,EAMlB,yBANkB,EAOlB,yBAPkB,EAQlB,yBARkB,EASlB,yBATkB,CAAtB;AAYA,MAAMC,aAAa,GAAG,CAClB,yBADkB,EAElB,0BAFkB,EAGlB,2BAHkB,EAIlB,2BAJkB,EAKlB,0BALkB,EAMlB,yBANkB,EAOlB,yBAPkB,EAQlB,yBARkB,EASlB,yBATkB,CAAtB;;AAYA,MAAMC,eAAe,GAAG,YAA+D;EAAA,IAA9DC,KAA8D,uEAAtD;IAACC,MAAM,EAAEN,OAAT;IAAkBO,OAAO,EAAEL;EAA3B,CAAsD;EAAA,IAAXM,MAAW;EACnF,IAAIC,UAAJ;;EACA,QAAOD,MAAM,CAACE,IAAd;IACI,KAAK,OAAL;MACID,UAAU,GAAGV,iBAAiB,CAACC,OAAD,EAAUE,aAAV,CAA9B;MAEA,OAAO;QACHO,UAAU,EAAEA;MADT,CAAP;;IAGJ,KAAK,OAAL;MACIA,UAAU,GAAGV,iBAAiB,CAACE,OAAD,EAAUE,aAAV,CAA9B;MAEA,OAAO;QACHM,UAAU,EAAEA;MADT,CAAP;;IAGJ;MACI,OAAOJ,KAAP;EAdR;AAgBH,CAlBD;;AAoBA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}