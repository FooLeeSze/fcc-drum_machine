{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lee Sze\\\\Documents\\\\fcc-frontend-lib-proj\\\\drum_machine\\\\drum_machine\\\\src\\\\components\\\\DrumPad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateDisplay } from '../actions/display';\nimport { displayTextLibrary } from '../utils/constants';\nimport { drumPadActiveStyle, drumPadNormalStyle } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DrumPad(props) {\n  _s();\n\n  // Local state to activate pad\n  const [active, setActive] = React.useState(false); // Access current audio files & volume in Redux store\n\n  const dispatch = useDispatch();\n  const {\n    libNum,\n    audioFiles\n  } = useSelector(state => state.audioFiles);\n  const volume = useSelector(state => state.volume);\n  const power = useSelector(state => state.power); // Function to play sound and update display text state upon activation\n\n  function activatePad(id) {\n    if (power) {\n      const elem = document.getElementById(id);\n      elem.currentTime = 0;\n      elem.load();\n      elem.volume = Number(volume) / 100;\n      elem.play();\n      dispatch(updateDisplay(displayTextLibrary[libNum][id]));\n    }\n\n    setActive(true); //setTimeout(() => setActive(false), 100)\n  }\n\n  function handleClick(event) {\n    let id = event.target.id.split('-')[0];\n    activatePad(id);\n  }\n\n  function handleDeactivate() {\n    setActive(false);\n  }\n\n  function handleKeyDown(event) {\n    var key = event.key;\n    var keyCode = props.id.toLowerCase();\n\n    if (key === keyCode || key === keyCode.toUpperCase()) {\n      let id = key.toUpperCase();\n      activatePad(id);\n      setTimeout(() => setActive(false), 100);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: active ? drumPadActiveStyle : drumPadNormalStyle,\n    type: \"button\",\n    className: \"drum-pad\",\n    id: `${props.id}-pad`,\n    onMouseDown: handleClick,\n    onMouseUp: handleDeactivate,\n    tabIndex: \"0\",\n    children: [props.id, /*#__PURE__*/_jsxDEV(\"audio\", {\n      className: \"clip\",\n      src: audioFiles[props.index],\n      type: \"audio/wav\",\n      id: props.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n/*\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n    }, [])\r\n\r\n    \r\n    \r\n        onKeyDown={handleKeyDown} \r\n*/\n\n_s(DrumPad, \"kuQZV69/MJueTX7TiWnjGAMYnn8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = DrumPad;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrumPad\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","updateDisplay","displayTextLibrary","drumPadActiveStyle","drumPadNormalStyle","DrumPad","props","active","setActive","useState","dispatch","libNum","audioFiles","state","volume","power","activatePad","id","elem","document","getElementById","currentTime","load","Number","play","handleClick","event","target","split","handleDeactivate","handleKeyDown","key","keyCode","toLowerCase","toUpperCase","setTimeout","index"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/drum_machine/drum_machine/src/components/DrumPad.js"],"sourcesContent":["import React, {useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateDisplay } from '../actions/display'\r\nimport { displayTextLibrary } from '../utils/constants';\r\nimport { drumPadActiveStyle, drumPadNormalStyle } from '../utils/constants';\r\n\r\nexport default function DrumPad(props) {\r\n    // Local state to activate pad\r\n    const [active, setActive]  = React.useState(false);\r\n\r\n    // Access current audio files & volume in Redux store\r\n    const dispatch = useDispatch();\r\n    const { libNum, audioFiles } = useSelector(state => state.audioFiles);\r\n    const volume = useSelector(state => state.volume);\r\n    const power = useSelector(state => state.power);\r\n    \r\n    // Function to play sound and update display text state upon activation\r\n    function activatePad(id) {\r\n        if (power) {\r\n            const elem = document.getElementById(id);\r\n\r\n            elem.currentTime = 0;\r\n            elem.load();\r\n            elem.volume = Number(volume) / 100;\r\n            elem.play();\r\n\r\n            dispatch(updateDisplay(displayTextLibrary[libNum][id]))\r\n        }\r\n\r\n        setActive(true)\r\n        //setTimeout(() => setActive(false), 100)\r\n    }\r\n\r\n    function handleClick(event) {\r\n        let id = event.target.id.split('-')[0];\r\n        activatePad(id)\r\n    }\r\n\r\n    function handleDeactivate() {\r\n        setActive(false)\r\n    }\r\n\r\n    function handleKeyDown(event) {\r\n        var key = event.key;\r\n        var keyCode = props.id.toLowerCase();\r\n        \r\n        if(key === keyCode || key === keyCode.toUpperCase()) {\r\n            let id = key.toUpperCase();\r\n            activatePad(id)\r\n            setTimeout(() => setActive(false), 100)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <button style={active ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"drum-pad\"  id={`${props.id}-pad`}\r\n                onMouseDown={handleClick} onMouseUp={handleDeactivate} tabIndex=\"0\">{props.id}\r\n            <audio className=\"clip\" src={audioFiles[props.index]} type=\"audio/wav\" id={props.id}>\r\n            </audio>\r\n        </button>\r\n    )\r\n}\r\n\r\n/*\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n    }, [])\r\n\r\n    \r\n    \r\n        onKeyDown={handleKeyDown} \r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module"}