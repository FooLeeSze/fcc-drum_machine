{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lee Sze\\\\Documents\\\\fcc-frontend-lib-proj\\\\drum_machine\\\\drum_machine\\\\src\\\\DrumPadContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateDisplay } from './actions/display';\nimport { audioDispLibrary } from './utils/constants';\nimport { drumPadActiveStyle, drumPadNormalStyle } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DrumPad() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    libNum,\n    audioFiles\n  } = useSelector(state => state.audioFiles);\n  const [active, setActive] = React.useState({\n    Q: false,\n    W: false,\n    E: false,\n    A: false,\n    S: false,\n    D: false,\n    Z: false,\n    X: false,\n    C: false\n  });\n\n  function handlePadClick(event) {\n    let id = event.target.id;\n    const elem = document.getElementById(id + 'audio');\n    elem.currentTime = 0;\n    elem.load();\n    elem.play();\n    dispatch(updateDisplay(audioDispLibrary[libNum][event.target.id]));\n    let newState = { ...active\n    };\n    newState[id] = true;\n    setActive(newState);\n    setTimeout(() => {\n      let newState2 = { ...active\n      };\n      newState2[id] = false;\n      setActive(newState2);\n    }, 100);\n  } // Function to handle key press and play drum pad audio\n\n\n  function handleKeyPress(event) {\n    if (event.key === \"q\" || event.key === 'w' || event.key === 'e' || event.key === 'a' || event.key === 's' || event.key === 'd' || event.key === 'z' || event.key === 'x' || event.key === 'c') {\n      const elem = document.getElementById(event.key.toUpperCase() + 'audio');\n      elem.currentTime = 0;\n      elem.load();\n      elem.play();\n      dispatch(updateDisplay(audioDispLibrary[libNum][event.key.toUpperCase()]));\n      const id = event.key.toUpperCase();\n      let newState = { ...active\n      };\n      newState[id] = true;\n      setActive(newState);\n      setTimeout(() => {\n        let newState2 = { ...active\n        };\n        newState2[id] = false;\n        setActive(newState2);\n      }, 100);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"drum-pad-container\",\n    children: /*#__PURE__*/_jsxDEV(DrumPad, {\n      id: \"Q\",\n      index: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n/*\r\n<button style={active['Q'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\"  id=\"Q\" onClick={handlePadClick} onKeyDown={handleKeyPress} tabIndex=\"0\">Q\r\n                <audio id=\"Qaudio\">\r\n                    <source src={audioFiles[0]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['W'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"W\" onClick={handlePadClick}>W\r\n                <audio id=\"Waudio\">\r\n                    <source src={audioFiles[1]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['E'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"E\" onClick={handlePadClick}>E\r\n                <audio id=\"Eaudio\">\r\n                    <source src={audioFiles[2]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['A'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"A\" onClick={handlePadClick}>A\r\n                <audio id=\"Aaudio\">\r\n                    <source src={audioFiles[3]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['S'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"S\" onClick={handlePadClick}>S\r\n                <audio id=\"Saudio\">\r\n                    <source src={audioFiles[4]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['D'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"D\" onClick={handlePadClick}>D\r\n                <audio id=\"Daudio\">\r\n                    <source src={audioFiles[5]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['Z'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"Z\" onClick={handlePadClick}>Z\r\n                <audio id=\"Zaudio\">\r\n                    <source src={audioFiles[6]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['X'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"X\" onClick={handlePadClick}>X\r\n                <audio id=\"Xaudio\">\r\n                    <source src={audioFiles[7]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['C'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"C\" onClick={handlePadClick}>C\r\n                <audio id=\"Caudio\">\r\n                    <source src={audioFiles[8]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n\r\n            */\n\n_s(DrumPad, \"CDV1C9tSq0DkKL1BaxqCF5Y6x/8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DrumPad;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrumPad\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","updateDisplay","audioDispLibrary","drumPadActiveStyle","drumPadNormalStyle","DrumPad","dispatch","libNum","audioFiles","state","active","setActive","useState","Q","W","E","A","S","D","Z","X","C","handlePadClick","event","id","target","elem","document","getElementById","currentTime","load","play","newState","setTimeout","newState2","handleKeyPress","key","toUpperCase","window","addEventListener"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/drum_machine/drum_machine/src/DrumPadContainer.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateDisplay } from './actions/display'\r\nimport { audioDispLibrary } from './utils/constants';\r\nimport { drumPadActiveStyle, drumPadNormalStyle } from './utils/constants';\r\n\r\n\r\nexport default function DrumPad() {\r\n    const dispatch = useDispatch();\r\n    const {libNum, audioFiles} = useSelector(state => state.audioFiles);\r\n\r\n    const [active, setActive] = React.useState({Q: false, W: false, E: false,\r\n                                                A: false, S: false, D: false,\r\n                                                Z: false, X: false, C: false})\r\n\r\n    function handlePadClick(event) {\r\n        let id = event.target.id;\r\n        const elem = document.getElementById(id + 'audio');\r\n        elem.currentTime = 0;\r\n        elem.load();\r\n        elem.play();\r\n\r\n        dispatch(updateDisplay(audioDispLibrary[libNum][event.target.id]))\r\n        \r\n        let newState = {...active};\r\n        newState[id] = true;\r\n        setActive(newState)\r\n\r\n        setTimeout(() => {\r\n            let newState2 = {...active};\r\n            newState2[id] = false;\r\n            setActive(newState2)}, 100)\r\n    }\r\n\r\n    // Function to handle key press and play drum pad audio\r\n    function handleKeyPress(event) {\r\n        \r\n        if(event.key === \"q\" || event.key === 'w' || event.key === 'e' \r\n            || event.key === 'a' || event.key === 's' || event.key === 'd'\r\n            || event.key === 'z' || event.key === 'x' || event.key === 'c') {\r\n\r\n                \r\n            const elem = document.getElementById(event.key.toUpperCase() + 'audio');\r\n            elem.currentTime = 0;\r\n            elem.load();\r\n            elem.play();\r\n\r\n            dispatch(updateDisplay(audioDispLibrary[libNum][event.key.toUpperCase()]))\r\n\r\n            const id = event.key.toUpperCase();\r\n            let newState = {...active};\r\n            newState[id] = true;\r\n            setActive(newState)\r\n\r\n            setTimeout(() => {\r\n                let newState2 = {...active};\r\n                newState2[id] = false;\r\n                setActive(newState2)}, 100)\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        window.addEventListener('keydown', handleKeyPress);\r\n    })\r\n\r\n    return (\r\n        <div id=\"drum-pad-container\">\r\n            <DrumPad id=\"Q\" index=\"0\" />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n/*\r\n<button style={active['Q'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\"  id=\"Q\" onClick={handlePadClick} onKeyDown={handleKeyPress} tabIndex=\"0\">Q\r\n                <audio id=\"Qaudio\">\r\n                    <source src={audioFiles[0]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['W'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"W\" onClick={handlePadClick}>W\r\n                <audio id=\"Waudio\">\r\n                    <source src={audioFiles[1]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['E'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"E\" onClick={handlePadClick}>E\r\n                <audio id=\"Eaudio\">\r\n                    <source src={audioFiles[2]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['A'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"A\" onClick={handlePadClick}>A\r\n                <audio id=\"Aaudio\">\r\n                    <source src={audioFiles[3]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['S'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"S\" onClick={handlePadClick}>S\r\n                <audio id=\"Saudio\">\r\n                    <source src={audioFiles[4]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['D'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"D\" onClick={handlePadClick}>D\r\n                <audio id=\"Daudio\">\r\n                    <source src={audioFiles[5]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['Z'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"Z\" onClick={handlePadClick}>Z\r\n                <audio id=\"Zaudio\">\r\n                    <source src={audioFiles[6]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['X'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"X\" onClick={handlePadClick}>X\r\n                <audio id=\"Xaudio\">\r\n                    <source src={audioFiles[7]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n            <button style={active['C'] ? drumPadActiveStyle : drumPadNormalStyle} type=\"button\" className=\"pad\" id=\"C\" onClick={handlePadClick}>C\r\n                <audio id=\"Caudio\">\r\n                    <source src={audioFiles[8]} type=\"audio/wav\"></source>\r\n                </audio>\r\n            </button>\r\n\r\n            */"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,mBAAvD;;AAGA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM;IAACO,MAAD;IAASC;EAAT,IAAuBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAAxC;EAEA,MAAM,CAACE,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACe,QAAN,CAAe;IAACC,CAAC,EAAE,KAAJ;IAAWC,CAAC,EAAE,KAAd;IAAqBC,CAAC,EAAE,KAAxB;IACCC,CAAC,EAAE,KADJ;IACWC,CAAC,EAAE,KADd;IACqBC,CAAC,EAAE,KADxB;IAECC,CAAC,EAAE,KAFJ;IAEWC,CAAC,EAAE,KAFd;IAEqBC,CAAC,EAAE;EAFxB,CAAf,CAA5B;;EAIA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;IAC3B,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAN,CAAaD,EAAtB;IACA,MAAME,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,EAAE,GAAG,OAA7B,CAAb;IACAE,IAAI,CAACG,WAAL,GAAmB,CAAnB;IACAH,IAAI,CAACI,IAAL;IACAJ,IAAI,CAACK,IAAL;IAEAzB,QAAQ,CAACL,aAAa,CAACC,gBAAgB,CAACK,MAAD,CAAhB,CAAyBgB,KAAK,CAACE,MAAN,CAAaD,EAAtC,CAAD,CAAd,CAAR;IAEA,IAAIQ,QAAQ,GAAG,EAAC,GAAGtB;IAAJ,CAAf;IACAsB,QAAQ,CAACR,EAAD,CAAR,GAAe,IAAf;IACAb,SAAS,CAACqB,QAAD,CAAT;IAEAC,UAAU,CAAC,MAAM;MACb,IAAIC,SAAS,GAAG,EAAC,GAAGxB;MAAJ,CAAhB;MACAwB,SAAS,CAACV,EAAD,CAAT,GAAgB,KAAhB;MACAb,SAAS,CAACuB,SAAD,CAAT;IAAqB,CAHf,EAGiB,GAHjB,CAAV;EAIH,CAzB6B,CA2B9B;;;EACA,SAASC,cAAT,CAAwBZ,KAAxB,EAA+B;IAE3B,IAAGA,KAAK,CAACa,GAAN,KAAc,GAAd,IAAqBb,KAAK,CAACa,GAAN,KAAc,GAAnC,IAA0Cb,KAAK,CAACa,GAAN,KAAc,GAAxD,IACIb,KAAK,CAACa,GAAN,KAAc,GADlB,IACyBb,KAAK,CAACa,GAAN,KAAc,GADvC,IAC8Cb,KAAK,CAACa,GAAN,KAAc,GAD5D,IAEIb,KAAK,CAACa,GAAN,KAAc,GAFlB,IAEyBb,KAAK,CAACa,GAAN,KAAc,GAFvC,IAE8Cb,KAAK,CAACa,GAAN,KAAc,GAF/D,EAEoE;MAGhE,MAAMV,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwBL,KAAK,CAACa,GAAN,CAAUC,WAAV,KAA0B,OAAlD,CAAb;MACAX,IAAI,CAACG,WAAL,GAAmB,CAAnB;MACAH,IAAI,CAACI,IAAL;MACAJ,IAAI,CAACK,IAAL;MAEAzB,QAAQ,CAACL,aAAa,CAACC,gBAAgB,CAACK,MAAD,CAAhB,CAAyBgB,KAAK,CAACa,GAAN,CAAUC,WAAV,EAAzB,CAAD,CAAd,CAAR;MAEA,MAAMb,EAAE,GAAGD,KAAK,CAACa,GAAN,CAAUC,WAAV,EAAX;MACA,IAAIL,QAAQ,GAAG,EAAC,GAAGtB;MAAJ,CAAf;MACAsB,QAAQ,CAACR,EAAD,CAAR,GAAe,IAAf;MACAb,SAAS,CAACqB,QAAD,CAAT;MAEAC,UAAU,CAAC,MAAM;QACb,IAAIC,SAAS,GAAG,EAAC,GAAGxB;QAAJ,CAAhB;QACAwB,SAAS,CAACV,EAAD,CAAT,GAAgB,KAAhB;QACAb,SAAS,CAACuB,SAAD,CAAT;MAAqB,CAHf,EAGiB,GAHjB,CAAV;IAIH;EACJ;;EAEDpC,SAAS,CAAE,MAAM;IACbwC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,cAAnC;EACH,CAFQ,CAAT;EAIA,oBACI;IAAK,EAAE,EAAC,oBAAR;IAAA,uBACI,QAAC,OAAD;MAAS,EAAE,EAAC,GAAZ;MAAgB,KAAK,EAAC;IAAtB;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAlHwB9B,O;UACHL,W,EACYD,W;;;KAFTM,O"},"metadata":{},"sourceType":"module"}