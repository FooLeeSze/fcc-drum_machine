{"ast":null,"code":"import { extractAudioFiles } from '../utils/utils';\nconst folder1 = './samples/electro/';\nconst folder2 = './samples/vinyl/';\nconst audioLibrary1 = ['CYCdh_ElecK01-ClHat01.wav', 'CYCdh_ElecK01-Kick01.wav', 'CYCdh_ElecK01-Kick02.wav', 'CYCdh_ElecK01-OpHat02.wav', 'CYCdh_ElecK01-Snr01.wav', 'CYCdh_ElecK01-Snr02.wav', 'CYCdh_ElecK01-Tom01.wav', 'CYCdh_ElecK01-Tom02.wav', 'CYCdh_ElecK01-Tom03.wav'];\nconst audioLibrary2 = ['CYCdh_VinylK2-ClHat.wav', 'CYCdh_VinylK2-Kick02.wav', 'CYCdh_VinylK2-Kicki01.wav', 'CYCdh_VinylK2-OpHat01.wav', 'CYCdh_VinylK2-Ride01.wav', 'CYCdh_VinylK2-Snr01.wav', 'CYCdh_VinylK2-Snr02.wav', 'CYCdh_VinylK2-Tom01.wav', 'CYCdh_VinylK2-Tom02.wav'];\nconst iniFiles = extractAudioFiles(folder1, audioLibrary1);\n\nconst audioUrlReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iniFiles;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let audioFiles;\n\n  switch (action.type) {\n    case 'BANKA':\n      audioFiles = extractAudioFiles(folder1, audioLibrary1);\n      return audioFiles;\n\n    case 'BANKB':\n      audioFiles = extractAudioFiles(folder2, audioLibrary2);\n      return audioFiles;\n\n    default:\n      return state;\n  }\n};\n\nexport default audioUrlReducer;","map":{"version":3,"names":["extractAudioFiles","folder1","folder2","audioLibrary1","audioLibrary2","iniFiles","audioUrlReducer","state","action","audioFiles","type"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/drum_machine/drum_machine/src/reducers/audioUrl.js"],"sourcesContent":["import { extractAudioFiles } from '../utils/utils';\r\n\r\nconst folder1 = './samples/electro/';\r\nconst folder2 = './samples/vinyl/';\r\n\r\nconst audioLibrary1 = [\r\n    'CYCdh_ElecK01-ClHat01.wav',\r\n    'CYCdh_ElecK01-Kick01.wav',\r\n    'CYCdh_ElecK01-Kick02.wav',\r\n    'CYCdh_ElecK01-OpHat02.wav',\r\n    'CYCdh_ElecK01-Snr01.wav',\r\n    'CYCdh_ElecK01-Snr02.wav',\r\n    'CYCdh_ElecK01-Tom01.wav',\r\n    'CYCdh_ElecK01-Tom02.wav',\r\n    'CYCdh_ElecK01-Tom03.wav'\r\n]\r\n\r\nconst audioLibrary2 = [\r\n    'CYCdh_VinylK2-ClHat.wav',\r\n    'CYCdh_VinylK2-Kick02.wav',\r\n    'CYCdh_VinylK2-Kicki01.wav',\r\n    'CYCdh_VinylK2-OpHat01.wav',\r\n    'CYCdh_VinylK2-Ride01.wav',\r\n    'CYCdh_VinylK2-Snr01.wav',\r\n    'CYCdh_VinylK2-Snr02.wav',\r\n    'CYCdh_VinylK2-Tom01.wav',\r\n    'CYCdh_VinylK2-Tom02.wav'\r\n]\r\n\r\nconst iniFiles = extractAudioFiles(folder1, audioLibrary1);\r\n\r\nconst audioUrlReducer = (state = iniFiles, action) => {\r\n    let audioFiles\r\n    switch(action.type) {\r\n        case 'BANKA':\r\n            audioFiles = extractAudioFiles(folder1, audioLibrary1);\r\n\r\n            return audioFiles\r\n        case 'BANKB':\r\n            audioFiles = extractAudioFiles(folder2, audioLibrary2);\r\n\r\n            return audioFiles\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default audioUrlReducer"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,gBAAlC;AAEA,MAAMC,OAAO,GAAG,oBAAhB;AACA,MAAMC,OAAO,GAAG,kBAAhB;AAEA,MAAMC,aAAa,GAAG,CAClB,2BADkB,EAElB,0BAFkB,EAGlB,0BAHkB,EAIlB,2BAJkB,EAKlB,yBALkB,EAMlB,yBANkB,EAOlB,yBAPkB,EAQlB,yBARkB,EASlB,yBATkB,CAAtB;AAYA,MAAMC,aAAa,GAAG,CAClB,yBADkB,EAElB,0BAFkB,EAGlB,2BAHkB,EAIlB,2BAJkB,EAKlB,0BALkB,EAMlB,yBANkB,EAOlB,yBAPkB,EAQlB,yBARkB,EASlB,yBATkB,CAAtB;AAYA,MAAMC,QAAQ,GAAGL,iBAAiB,CAACC,OAAD,EAAUE,aAAV,CAAlC;;AAEA,MAAMG,eAAe,GAAG,YAA8B;EAAA,IAA7BC,KAA6B,uEAArBF,QAAqB;EAAA,IAAXG,MAAW;EAClD,IAAIC,UAAJ;;EACA,QAAOD,MAAM,CAACE,IAAd;IACI,KAAK,OAAL;MACID,UAAU,GAAGT,iBAAiB,CAACC,OAAD,EAAUE,aAAV,CAA9B;MAEA,OAAOM,UAAP;;IACJ,KAAK,OAAL;MACIA,UAAU,GAAGT,iBAAiB,CAACE,OAAD,EAAUE,aAAV,CAA9B;MAEA,OAAOK,UAAP;;IACJ;MACI,OAAOF,KAAP;EAVR;AAYH,CAdD;;AAgBA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}